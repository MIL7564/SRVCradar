***Codebase:

**SMSReceiver.java:-
package com.text.retriever;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Build;
import android.os.Bundle;
import android.telephony.SmsMessage;
import android.util.Log;
import okhttp3.MediaType;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.Response;
import org.json.JSONObject;

import java.util.concurrent.TimeUnit;

public class SMSReceiver extends BroadcastReceiver {
    private static final String TAG = "SMSReceiver";
    private OkHttpClient client;
    private static final String WEBHOOK_URL = "https://FlowerEconomics.com/wp-json/my-webhooks/v1/webhook/text";  // replace this with your actual URL
    private static final MediaType JSON = MediaType.get("application/json; charset=utf-8");

    public SMSReceiver() {
        this.client = new OkHttpClient.Builder()
                .connectTimeout(20, TimeUnit.SECONDS)
                .readTimeout(20, TimeUnit.SECONDS)
                .build();
    }

    @Override
    public void onReceive(Context context, Intent intent) {
        if ("android.provider.Telephony.SMS_RECEIVED".equals(intent.getAction())) {
            Bundle extras = intent.getExtras();
            if (extras != null) {
                Object[] pdus = (Object[]) extras.get("pdus");
                if (pdus != null && pdus.length > 0) {
                    SmsMessage[] messages = new SmsMessage[pdus.length];
                    for (int i = 0; i < pdus.length; i++) {
                        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
                            String format = extras.getString("format");
                            messages[i] = SmsMessage.createFromPdu((byte[]) pdus[i], format);
                        } else {
                            messages[i] = SmsMessage.createFromPdu((byte[]) pdus[i]);
                        }
                    }

                    // Extract necessary information from the messages
                    String messageBody = messages[0].getMessageBody();
                    String sender = messages[0].getOriginatingAddress();

                    // Convert the message body and keywords to lowercase for case-insensitive comparison
                    String lowerCaseMessageBody = messageBody.toLowerCase();
                    String keyword1 = "cellnet";
                    String keyword2 = "opa";

                    if (lowerCaseMessageBody.contains(keyword1) && lowerCaseMessageBody.contains(keyword2)) {
                        // Keywords "cellnet" and "opa" (case-insensitive) found in the message
                        // Log the entire message and sender's number (second, third, and fourth digits)
                        Log.i(TAG, "SMS contained the word 'cellnet' and 'opa': " + messageBody);
                        if (sender != null && sender.length() > 4) {
                            Log.i(TAG, "Sender's number, digits 2-4: " + sender.substring(1, 4));
                            // Trigger the webhook asynchronously using AsyncTask
                            new WebhookAsyncTask().execute(messageBody, sender.substring(1, 4));
                        } else {
                            Log.w(TAG, "Sender's number is not long enough to extract digits 2-4");
                        }
                    }
                }
            }
        }
    }

    private class WebhookAsyncTask extends AsyncTask<String, Void, Void> {
        @Override
        protected Void doInBackground(String... params) {
            String messageBody = params[0];
            String fromNumber = params[1];

            try {
                String requestBody = "{\"text\":\"" + messageBody + "\",\"FromNumber\":\"" + fromNumber + "\",\"OccurredAt\":\"" + System.currentTimeMillis() + "\"}";
                RequestBody body = RequestBody.create(requestBody, JSON);
                Request request = new Request.Builder()
                        .url(WEBHOOK_URL)
                        .post(body)
                        .addHeader("Content-Type", "application/json")
                        .addHeader("FromNumber", fromNumber)
                        .addHeader("text", messageBody)
                        .addHeader("OccurredAt", String.valueOf(System.currentTimeMillis()))
                        .build();

                // Execute the request
                Response response = client.newCall(request).execute();

                Log.i(TAG, "Webhook response: " + response.body().string());
            } catch (Exception e) {
                Log.e(TAG, "Error in sending request", e);
            }

            return null;
        }
    }
}

**my-webhooks.php:-
<?php
/*
Plugin Name: My Webhooks
Description: Custom plugin to handle incoming webhooks from Mobilephones.
Requisites: "WP REST API" plugin and "League Table Grid" plugin.
Version: 0.0.9
Delicensed: CC0 by Salman SHUAIB.
*/

if ( ! function_exists( 'resolute' ) ) {
    function resolute($phNum) {
        $digits = str_split($phNum);
        while (count($digits) > 1) {
            $digits = str_split(array_sum($digits));
        }
        return intval($digits[0]);
    }
}

// Webhook handler function
if (! function_exists('handle_webhook_request')) {
    function handle_webhook_request(WP_REST_Request $request) {
        // Extract the necessary information from the request headers
        // $occurred_at = $_SERVER['HTTP_OCCURREDAT'];
        $from_number = $_SERVER['HTTP_FROMNUMBER'];
        $text = $_SERVER['HTTP_TEXT'];
        // The Category is based on the sender's mobile phone number, which mobile phone number  is already extracted above
        // ....Therefore, we do not need to program the Category into SMSReceiver.java which sends the HTTP request to the webhook
        // .......We want to match the Resolute to the Child Category of the Parent Category "USA"

        // Calculate the sub-category based on the sender's mobile phone number
        $legion_num = resolute($from_number);
        $child_category = get_categories(array('parent' => 17)); // 17 is the ID of the Parent Category "USA"

        $sub_category = ''; // Initialize sub_category variable

        if ($legion_num >= 1 && $legion_num <= 9) {
        $property_name = $legion_num . 'legion'; // Example: 1legion, 2legion, ...
        $sub_category = $child_category[0]->$property_name;
        }

}
        // Perform actions based on the webhook data
        // Create a new post with the received data
        $post_data = array(
            'post_title'   => 'USA Scores A Penalty VS Legion Number ' . resolute($from_number),
            'post_content' => $text,   // Use the extracted text here
            'post_status'  => 'publish',
            'post_author'  => 1, // Change this to the desired author ID
            'post_category' => $sub_category
        );

        $post_id = wp_insert_post($post_data);

        // Send a response if necessary
        if ($post_id) {
            // Post created successfully
            return new WP_REST_Response('Post created', 200);
        } else {
            // Error occurred while creating the post
            return new WP_REST_Response('Error creating post', 500);
        }
    }


    // Register the custom webhook route
    if (! function_exists('register_custom_webhook_route')) {
    function register_custom_webhook_route() {
        register_rest_route('my-webhooks/v1', '/webhook/text', array(
            'methods' => 'POST',
            'callback' => 'handle_webhook_request',
        ));
    }
}
add_action('rest_api_init', 'register_custom_webhook_route');
?>