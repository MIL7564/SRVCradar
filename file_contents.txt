***Codebase:

**comment-notifications.php:-
<?php
/*
Plugin Name: Comment Notifications
Description: Notify non-registered users about new comments on their posts via Email.
Version: 1.0.0
Delicensed: CC0 1.0 Universal by Salman SHUAIB
*/


// Add meta box for email
function nrucn_add_email_meta_box() {
    add_meta_box(
        'nrucn_email',
        'Non-Registered User Email',
        'nrucn_email_meta_box_callback',
        'post'
    );
}
add_action('add_meta_boxes', 'nrucn_add_email_meta_box');

// Display the meta box
function nrucn_email_meta_box_callback($post) {
    $email = get_post_meta($post->ID, '_nrucn_email', true);
    echo '<input type="email" name="nrucn_email" value="' . esc_attr($email) . '" style="width: 100%;" />';
}

// Save email meta data
function nrucn_save_email_data($post_id) {
    if (array_key_exists('nrucn_email', $_POST)) {
        update_post_meta(
            $post_id,
            '_nrucn_email',
            sanitize_email($_POST['nrucn_email'])
        );
    }
}
add_action('save_post', 'nrucn_save_email_data');

// Send comment notification to non-registered user email
function nrucn_send_email_on_comment($comment_id, $comment_object) {
    $post_id = $comment_object->comment_post_ID;
    $email = get_post_meta($post_id, '_nrucn_email', true);
    
    if ($email && filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $subject = "New Comment on Your Post";
        $message = "There is a new comment on your post. Check it out!";
        wp_mail($email, $subject, $message);
    }
}
add_action('wp_insert_comment', 'nrucn_send_email_on_comment', 99, 2);


function nrucn_enqueue_scripts() {
    wp_enqueue_script('nrucn-js', plugin_dir_url(__FILE__) . 'js/nrucn.js', array('jquery'), '1.0.0', true);
    wp_localize_script('nrucn-js', 'nrucn_obj', array(
        'ajax_url' => admin_url('admin-ajax.php')
    ));
}
add_action('wp_enqueue_scripts', 'nrucn_enqueue_scripts');


function nrucn_handle_subscription() {
    $post_id = intval($_POST['post_id']);
    $email = sanitize_email($_POST['email']);

    // Store the email as post meta
    update_post_meta($post_id, '_nrucn_email', $email);

    wp_send_json(array(
        'status' => true,
        'message' => 'Successfully subscribed!'
    ));
}
add_action('wp_ajax_nopriv_nrucn_subscribe', 'nrucn_handle_subscription');

**my-webhooks.php:-
<?php
/*
Plugin Name: My Webhooks
Description: Custom plugin to handle incoming webhooks from Mobilephones.
Requisites: "WP REST API" plugin and "League Table Grid" plugin.
Version: 0.0.9
Delicensed: CC0 1.0 Universal by Salman SHUAIB
*/

include 'CitiesBank.php';
$areaCodeToCity = array_flip($cityAreaCodes);  // Reverse the array for lookup

if (!function_exists('resolute')) {
    function resolute($phNum) {
        $digits = str_split($phNum);
        while (count($digits) > 1) {
            $digits = str_split(array_sum($digits));
        }
        return intval($digits[0]);
    }
}

// Webhook handler function
if (!function_exists('handle_webhook_request')) {
    function handle_webhook_request(WP_REST_Request $request) {
        global $areaCodeToCity;

        // Extract the necessary information from the request headers
        $from_number = $request->get_header('FromNumber');
        $text = $request->get_header('text');
        $TICKET = $request->get_header('DatePersonal');

        $legion_num = resolute($from_number);

        // Extract the area code from the phone number
        $areaCode = substr($from_number, 0, 3);  // Assuming the area code is the first three digits

        $baseCity = $areaCodeToCity[$areaCode] ?? "{Tag: BASECITY}";  // Check if the area code exists, else default

        update_option('legion_number', $legion_num);       
        // Perform actions based on the webhook data
        // Create a new post with the received data
        $post_data = array(
            'post_title'   => $baseCity . ' ' . $TICKET,
            'post_content' => $text,   
            'post_status'  => 'publish',
            'post_author'  => 2, 
            //'post_category' => $sub_category
        );

        $post_id = wp_insert_post($post_data);
        
        global $wpdb;    //Displays unique Legion numbers
        $wpdb->update(
            $wpdb->posts,
            array(
                'legion_number' => $legion_num  
            ),
            array('ID' => $post_id) 
        );
        
        
        // Check for duplicates and trash if necessary
        do_action('interdict_check_duplicate', $post_id, $from_number);

        // Send a response if necessary
        if ($post_id) {
            // Post created successfully
            return new WP_REST_Response('Post created', 200);
        } else {
            // Error occurred while creating the post
            return new WP_REST_Response('Error creating post', 500);
        }
    }
}

// Register the custom webhook route
function register_custom_webhook_route() {
    register_rest_route('my-webhooks/v1', '/webhook/text', array(
        'methods' => 'POST',
        'callback' => 'handle_webhook_request',
    ));
}

// Ensure the callback to register_custom_webhook_route is being run
add_action('rest_api_init', 'register_custom_webhook_route');
?>

**content-single.php:-
<?php
/**
 * Template part for displaying posts
 *
 * @link https://developer.wordpress.org/themes/basics/template-hierarchy/
 *
 * @package WordPress
 * @subpackage Twenty_Twenty_One
 * @since Twenty Twenty-One 1.0
 */
?>

<article id="post-<?php the_ID(); ?>" <?php post_class(); ?>>

	<header class="entry-header alignwide">
		<?php the_title( '<h1 class="entry-title">', '</h1>'); ?>
		<?php twenty_twenty_one_post_thumbnail(); ?>
	</header><!-- .entry-header -->

	<div class="entry-content">
		<?php
		the_content();

		wp_link_pages(
			array(
				'before'   => '<nav class="page-links" aria-label="' . esc_attr__( 'Page', 'twentytwentyone' ) . '">',
				'after'    => '</nav>',
				/* translators: %: Page number. */
				'pagelink' => esc_html__( 'Page %', 'twentytwentyone' ),
			)
		);
		?>
	</div><!-- .entry-content -->

	<footer class="entry-footer default-max-width">
		<?php twenty_twenty_one_entry_meta_footer(); ?>

    	<?php 
    	// Check if the current user is not logged in
    	if (!is_user_logged_in()) {
        	// Display the subscribe button
        	echo '<button class="subscribe-btn" data-post-id="' . get_the_ID() . '">Subscribe To Comments</button>';
    	}
    	?>
	</footer><!-- .entry-footer -->

	<?php if ( ! is_singular( 'attachment' ) ) : ?>
		<?php get_template_part( 'template-parts/post/author-bio' ); ?>
	<?php endif; ?>

</article><!-- #post-<?php the_ID(); ?> -->